using System;
using System.Globalization;
using System.IO;
using System.Linq;

public class FileFinder
{
    public static string GetMostRecentFile(string directoryPath)
    {
        // Check if the directory exists
        if (!Directory.Exists(directoryPath))
        {
            throw new DirectoryNotFoundException($"The directory {directoryPath} does not exist.");
        }

        // Get all files matching the pattern "data_*.xlsx"
        var files = Directory.GetFiles(directoryPath, "data_*.xlsx");

        // Use LINQ to select the file with the latest date in the filename
        var mostRecentFile = files.Select(file => new
        {
            FileName = file,
            Date = DateTime.ParseExact(Path.GetFileNameWithoutExtension(file).Substring(8), "yyyyMMdd", CultureInfo.InvariantCulture)
        })
        .OrderByDescending(f => f.Date) // Order by date descending
        .FirstOrDefault(); // Take the most recent file

        // If there's a file, return its full path, otherwise return null
        return mostRecentFile?.FileName;
    }
}

class Program
{
    static void Main()
    {
        string directoryPath = @"path\to\your\files"; // Replace with your file share location path
        try
        {
            var mostRecentFile = FileFinder.GetMostRecentFile(directoryPath);
            Console.WriteLine($"The most recent file is: {mostRecentFile}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}
